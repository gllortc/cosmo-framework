package com.cosmo.data.orm.annotations;

import java.lang.annotation.Documented;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import java.lang.annotation.ElementType;

import com.cosmo.ui.controls.FormFieldText;

/**
 * Anotación que sirve para indicar a las páginas que se precisa ser usuario autenticado.
 * 
 * @author Gerard Llort
 */
@Documented
@Retention( value = RetentionPolicy.RUNTIME )
@Target( value = ElementType.METHOD )
public @interface CormObjectField 
{
   // Valores por defecto que puede adoptar un campo
   public static String DEFVAL_USER_LOGIN   = "%%userlogin%%";
   public static String DEFVAL_USER_NAME    = "%%username%%";
   public static String DEFVAL_USER_MAIL    = "%%usermail%%";
   public static String DEFVAL_DATETIME_NOW = "%%now%%";
   
   /**
    * Tipo de datos del campo.
    */
   public enum FieldType
   {
      Text,
      Integer,
      Decimal
   }
   
   /**
    * Tipo de ordenación del campo en los listados.
    */
   public enum FieldSortType
   {
      None,
      Ascending,
      Descending
   }
   
   /**
    * Define el tipo de datos del campo.
    */
   Class<?> fieldClass() default FormFieldText.class;
   
   /**
    * Indica si el atributo es la clave principal.
    */
   boolean isPrimaryKey() default false;
   
   /**
    * Indica si el campo es autogenerado (autonumeric, serial, etc.).
    */
   boolean isAutogenerated() default false;
   
   /**
    * Nombre del campo en la BBDD.
    */
   String dbTableColumn();
   
   /**
    * Indica si el campo se debe mostrar en los grid que listan este tipo de objetos.
    */
   boolean showInObjectListGrid() default true;
   
   /**
    * Contiene la etiqueta que debe mostrarse junto al campo en un formulario.
    */
   String label() default "";
   
   /**
    * Contiene el tipo de ordenación a que está sujeto el campo en los listados.
    */
   FieldSortType sort() default FieldSortType.None;
   
   /**
    * Indica si el campo es de sólo lectura.
    */
   boolean readOnly() default false;
   
   /**
    * Indica que los valores del campo provienen de una lista de valores definida en el archivo de configuración.
    */
   String list() default "";
   
   /**
    * Indica el valor por defecto que adoptará el campo.
    */
   String defaultValue() default "";
}
